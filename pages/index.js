import AddTask from "@/components/AddTask";
import Header from "@/components/Header";
import ShowTask from "@/components/ShowTask";
import Head from "next/head";
import { useEffect, useState } from "react";

export default function Home() {
  const [task, setTask] = useState("");
  const [tasklist, setTasklist] = useState([]);
  const [editid, setEditid] = useState(0);
  const [theme, setTheme] = useState("medium");
  // useEffect(() => {
  //   const storeTask = localStorage.getItem("tasklist");
  //   setTasklist(JSON.parse(storeTask));
  // }, []);
  // useEffect(() => {
  //   const storeTheme = localStorage.getItem("theme");
  //   setTasklist(JSON.parse(storeTheme));
  // }, [theme]);
  const handleSubmit = (event) => {
    event.preventDefault();

    if (editid) {
      const date = new Date();
      const selectedTask = tasklist.find((task) => task.id === editid);
      const updateTask = tasklist.map((e) =>
        e.id === selectedTask.id
          ? (e = {
              id: e.id,
              name: task,
              time: `${date.toLocaleTimeString()} ${date.toLocaleDateString()}`,
            })
          : { id: e.id, name: e.name, time: e.time }
      );
      setTasklist(updateTask);
      setEditid(0);
      setTask("");
      return;
    }

    if (task) {
      const date = new Date();
      setTasklist([
        ...tasklist,
        {
          id: date.getTime(),
          name: task,
          time: `${date.toLocaleTimeString()} ${date.toLocaleDateString()}`,
        },
      ]);
      setTask("");
    }
  };

  const handleEdit = (id) => {
    const selectedTask = tasklist.find((task) => task.id === id);
    setTask(selectedTask.name);
    setEditid(id);
  };

  const handleDelete = (id) => {
    const updatedTasklist = tasklist.filter((task) => task.id !== id);
    setTasklist(updatedTasklist);
  };

  // useEffect(() => {
  //   localStorage.setItem("tasklist", JSON.stringify(tasklist));
  // }, [tasklist]);

  // useEffect(() => {
  //   localStorage.setItem("theme", JSON.stringify(theme));
  // }, [theme]);
  return (
    <>
      <Head>
        <title>Taskbook</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className={"App " + theme}>
          <div className="container">
            <Header setTheme={setTheme} theme={theme}>
              Taskbook
            </Header>
            <AddTask
              handleSubmit={handleSubmit}
              editid={editid}
              task={task}
              setTask={setTask}
            />
            <ShowTask
              tasklist={tasklist}
              setTasklist={setTasklist}
              handleEdit={handleEdit}
              handleDelete={handleDelete}
            />
          </div>
        </div>
      </main>
    </>
  );
}
